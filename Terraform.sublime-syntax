%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Terraform
file_extensions:
  - tf
  - tfvars
scope: source.terraform
contexts:
  main:
    - match: "#"
      comment: Comments
      captures:
        0: punctuation.definition.comment.terraform
      push:
        - meta_scope: comment.line.number-sign.terraform
        - match: $\n?
          captures:
            0: punctuation.definition.comment.terraform
          pop: true
    - match: /\*
      comment: Block comments
      captures:
        0: punctuation.definition.comment.terraform
      push:
        - meta_scope: comment.block.terraform
        - match: \*/
          captures:
            0: punctuation.definition.comment.terraform
          pop: true
    - match: //
      comment: Line comment
      scope: punctuation.definition.comment.terraform
      push:
        - meta_scope: comment.line.double-slash.terraform
        - match: $\n?
          captures:
            0: punctuation.definition.comment.terraform
          pop: true
    - match: \b(true|false|yes|no|on|off)\b
      comment: Language constants (true, false, yes, no, on, off)
      scope: constant.language.terraform
    - match: '\b([0-9]+)([kKmMgG]b?)?\b'
      comment: Numbers
      scope: constant.numeric.terraform
    - match: '\b(0x[0-9A-Fa-f]+)([kKmMgG]b?)?\b'
      comment: Hex numbers
      scope: constant.numeric.terraform
    - match: '(resource|data)\s+(")(\w+)(")\s+(")([\w-]+)(")\s+({)'
      scope: meta.resource.terraform entity.name.resource.terraform
      captures:
        1: storage.type.function.terraform
        2: string.terraform punctuation.definition.string.begin.terraform
        3: string.value.terraform
        4: string.terraform punctuation.definition.string.end.terraform
        5: string.terraform punctuation.definition.string.begin.terraform
        6: string.value.terraform
        7: string.terraform punctuation.definition.string.end.terraform
        8: punctuation.definition.tag.terraform
    - match: '(provider|provisioner|variable|output|module|atlas)\s+(")([\w-]+)(")\s+({)'
      scope: entity.name.resource.terraform
      captures:
        1: storage.type.function.terraform
        2: string.terraform punctuation.definition.string.begin.terraform
        3: string.value.terraform
        4: string.terraform punctuation.definition.string.end.terraform
        5: punctuation.definition.tag.terraform
    - match: '([\w_-]+)\s*(=)\s*'
      comment: Value assignments (left hand side not in double quotes)
      captures:
        1: variable.assignment.terraform
        2: keyword.operator.terraform
    - match: '(")([\w_-]+)(")\s*(=)\s*'
      comment: Value assignments (left hand side in double quotes)
      captures:
        1: punctuation.quote.double.terraform
        2: variable.assignment.terraform
        3: punctuation.quote.double.terraform
        4: keyword.operator.terraform
    - match: '([\w\-_]+)\s+({)'
      comment: Maps
      captures:
        1: entity.name.section.terraform
        2: punctuation.definition.tag.terraform
    - match: \"
      comment: Strings
      captures:
        0: string.terraform punctuation.definition.string.begin.terraform
      push:
        - meta_scope: string.quoted.double.terraform
        - match: \"
          captures:
            0: string.terraform punctuation.definition.string.end.terraform
          pop: true
        - include: interpolation
  interpolation:
    - match: '\$\{'
      scope: punctuation.section.interpolation.begin.terraform
      push:
        - meta_scope: string.interpolated.terraform
        - match: '\}'
          captures:
            0: punctuation.section.interpolation.end.terraform
          pop: true
        - include: interpolated_resource
  interpolated_resource:
    - match: (?<!\.)\w+(?:\.)
      scope: resource.name.terraform

